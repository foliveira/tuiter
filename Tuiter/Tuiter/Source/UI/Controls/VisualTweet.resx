<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_picture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAVhmlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNC4yLjItYzA2MyA1My4zNTI2MjQsIDIwMDgvMDcvMzAtMTg6MTI6MTggICAgICAgICI+CiA8cmRm
        OlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMi
        PgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5h
        ZG9iZS5jb20veGFwLzEuMC8iCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRz
        LzEuMS8iCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAg
        IHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVu
        dCMiCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5z
        OmV4aWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vZXhpZi8xLjAvIgogICAgeG1sbnM6cGhvdG9zaG9wPSJo
        dHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIgogICB4bXA6Q3JlYXRvclRvb2w9IkFkb2Jl
        IFBob3Rvc2hvcCBDUzQgV2luZG93cyIKICAgeG1wOkNyZWF0ZURhdGU9IjIwMDktMDctMzBUMTM6MDI6
        MDgrMDE6MDAiCiAgIHhtcDpNZXRhZGF0YURhdGU9IjIwMDktMDgtMDFUMTY6NTY6MjgrMDE6MDAiCiAg
        IHhtcDpNb2RpZnlEYXRlPSIyMDA5LTA4LTAxVDE2OjU2OjI4KzAxOjAwIgogICBkYzpmb3JtYXQ9ImFw
        cGxpY2F0aW9uL3ZuZC5hZG9iZS5waG90b3Nob3AiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6
        MjE0NUQ1REZCMzdFREUxMTg1NzVGMTMwRkFFQ0MyRDkiCiAgIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5k
        aWQ6QzI0MzlBNkZGQTdDREUxMUFFOUFBOEU4QkJDMDgyMzUiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1l
        bnRJRD0ieG1wLmRpZDpDMjQzOUE2RkZBN0NERTExQUU5QUE4RThCQkMwODIzNSIKICAgdGlmZjpPcmll
        bnRhdGlvbj0iMSIKICAgdGlmZjpYUmVzb2x1dGlvbj0iNzIwMDAwLzEwMDAwIgogICB0aWZmOllSZXNv
        bHV0aW9uPSI3MjAwMDAvMTAwMDAiCiAgIHRpZmY6UmVzb2x1dGlvblVuaXQ9IjIiCiAgIHRpZmY6TmF0
        aXZlRGlnZXN0PSIyNTYsMjU3LDI1OCwyNTksMjYyLDI3NCwyNzcsMjg0LDUzMCw1MzEsMjgyLDI4Mywy
        OTYsMzAxLDMxOCwzMTksNTI5LDUzMiwzMDYsMjcwLDI3MSwyNzIsMzA1LDMxNSwzMzQzMjs1NTRFMjhF
        QzdENzkwNzQ2MjY3RjcwNEIxMjc2NTZFQyIKICAgZXhpZjpQaXhlbFhEaW1lbnNpb249IjI1NiIKICAg
        ZXhpZjpQaXhlbFlEaW1lbnNpb249IjI1NiIKICAgZXhpZjpDb2xvclNwYWNlPSIxIgogICBleGlmOk5h
        dGl2ZURpZ2VzdD0iMzY4NjQsNDA5NjAsNDA5NjEsMzcxMjEsMzcxMjIsNDA5NjIsNDA5NjMsMzc1MTAs
        NDA5NjQsMzY4NjcsMzY4NjgsMzM0MzQsMzM0MzcsMzQ4NTAsMzQ4NTIsMzQ4NTUsMzQ4NTYsMzczNzcs
        MzczNzgsMzczNzksMzczODAsMzczODEsMzczODIsMzczODMsMzczODQsMzczODUsMzczODYsMzczOTYs
        NDE0ODMsNDE0ODQsNDE0ODYsNDE0ODcsNDE0ODgsNDE0OTIsNDE0OTMsNDE0OTUsNDE3MjgsNDE3Mjks
        NDE3MzAsNDE5ODUsNDE5ODYsNDE5ODcsNDE5ODgsNDE5ODksNDE5OTAsNDE5OTEsNDE5OTIsNDE5OTMs
        NDE5OTQsNDE5OTUsNDE5OTYsNDIwMTYsMCwyLDQsNSw2LDcsOCw5LDEwLDExLDEyLDEzLDE0LDE1LDE2
        LDE3LDE4LDIwLDIyLDIzLDI0LDI1LDI2LDI3LDI4LDMwOzMzMDc3MDgxN0FCNDI4Qjg1QzM2NkRBREQ3
        ODlDQzkyIgogICBwaG90b3Nob3A6Q29sb3JNb2RlPSIzIgogICBwaG90b3Nob3A6SUNDUHJvZmlsZT0i
        c1JHQiBJRUM2MTk2Ni0yLjEiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxy
        ZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4
        bXAuaWlkOkMyNDM5QTZGRkE3Q0RFMTFBRTlBQThFOEJCQzA4MjM1IgogICAgICBzdEV2dDp3aGVuPSIy
        MDA5LTA3LTMwVDEzOjAyOjA4KzAxOjAwIgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQ
        aG90b3Nob3AgQ1M0IFdpbmRvd3MiLz4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2
        ZWQiCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6QzM0MzlBNkZGQTdDREUxMUFFOUFBOEU4
        QkJDMDgyMzUiCiAgICAgIHN0RXZ0OndoZW49IjIwMDktMDctMzBUMTM6MjE6MzYrMDE6MDAiCiAgICAg
        IHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCBDUzQgV2luZG93cyIKICAgICAgc3RF
        dnQ6Y2hhbmdlZD0iLyIvPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAg
        ICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpDNDQzOUE2RkZBN0NERTExQUU5QUE4RThCQkMwODIz
        NSIKICAgICAgc3RFdnQ6d2hlbj0iMjAwOS0wNy0zMFQxMzoyMTozNiswMTowMCIKICAgICAgc3RFdnQ6
        c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENTNCBXaW5kb3dzIgogICAgICBzdEV2dDpjaGFu
        Z2VkPSIvIi8+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2
        dDppbnN0YW5jZUlEPSJ4bXAuaWlkOkVERjI4QkFBMDY3RERFMTFBRTlBQThFOEJCQzA4MjM1IgogICAg
        ICBzdEV2dDp3aGVuPSIyMDA5LTA3LTMwVDEzOjQ0OjA1KzAxOjAwIgogICAgICBzdEV2dDpzb2Z0d2Fy
        ZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ1M0IFdpbmRvd3MiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8i
        Lz4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0Omluc3Rh
        bmNlSUQ9InhtcC5paWQ6OUQyMUUyQkY4QzdFREUxMTk5RjdBRDlBMjQwMjlCMTIiCiAgICAgIHN0RXZ0
        OndoZW49IjIwMDktMDgtMDFUMTI6MTY6MjQrMDE6MDAiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9
        IkFkb2JlIFBob3Rvc2hvcCBDUzQgV2luZG93cyIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIvPgogICAg
        IDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0i
        eG1wLmlpZDoyMTQ1RDVERkIzN0VERTExODU3NUYxMzBGQUVDQzJEOSIKICAgICAgc3RFdnQ6d2hlbj0i
        MjAwOS0wOC0wMVQxNjo1NjoyOCswMTowMCIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUg
        UGhvdG9zaG9wIENTNCBXaW5kb3dzIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIi8+CiAgICA8L3JkZjpT
        ZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94
        OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAg
        ICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PiwwbogAAASjSURBVFhHzZdZSCVHFIbb
        HfdR44obAUFBIXkSJDqICAaUKAwiMQ/KjBgyikSCkkTjiwouD4KoEMIw6Iw7QiJBjRPXyTB5SFQighjE
        HTfEfXdO/r9jy/VGr6RvYFLwcburqvv8dU6dU30VEVHeJm/VOBf+/xZwfHysZGVlKSkpKSZJTk5+LyEh
        oTwuLq4jPj7+26SkpAd4xiItLU3Z2NgwuUiTgwcHB4qbm5tyR/sc48ehoaGSmpoqsbGx8KtCfgT35ufn
        9Qs4PDxUAgICaN8K+AMPIzEfWVhYSHl5uayvr8v29rbKwMCA4DmxsbFpWVhY0C/g7OxM8ff3T4HRMbAP
        1sF3wPVSyOv09HTZ29uTpaUlwWoFBmV3d1fa29tVTzQ3N79vKstMqnv69Gm8paXlm+zsbOnr6xPcS0hI
        CF/8PXgHbHd1dcnW1pYsLi5esby8LCsrK+Lt7S1lZWWf6hLA1QcHB/+cmJgoCIVq5OjoSAYHB8XBwYEi
        PgFr3d3d6hg9oEHja2tr4ufnRwGPdQnY39+3dXR0XGhoaBBci7aqzc1NCQ8Pp4BcMJyTkyPIFnXFnEMY
        kv7+fuH+ePLkSZQuAaenpxY+Pj6vMzIy5Pz8XGgYWSHj4+OCzKCA++CBra2tGhp6h56imKmpKYmIiBAr
        K6v+2dlZK10C+FBVVdXHeIlUVFTI9PS0jI6OSlRUFI1zU9pfbsRq7BNB3ktpaank5uaKr68v5/yGUPkj
        LPqzgGmIjZTP3e/s7CwwdIHrAfCuUTp+iPsmMAJ+AHnACQIUs9KQAgIDA2mLq/0ARBgZNr5lnbindZot
        4OTkRAkKCnLBC78EL8AQKAeeRpbTcf8L2ALb4HfwmALMCsHc3JwrMuEV0lFKSkrUGIeFhTG+k8D7UkQF
        N2JeXp709vaqu7+4uFhcXFzE2tq6CcVJ/ybMzMz8xsvLS2ZmZrAn/25Ms8s0pCfu29nZSWtrqzqGzBF4
        Tb1mOba3t5fCwsLPdGUBXqZ4enq+ys/PV1+o1Xle19bW0gvj4CemKdvOzs4VnMtWUFAgrq6uf6COWN8m
        4tYU4UmInT+BVFRfxvpO2J4/f04Ba6SxsfHauDbv4uJCDQfSeB9h8NMlAOrHWAPYWN0IW1NTEwVsgE3N
        /dq49ksBDANCdAgBgWYLYBUkbM+ePaMAnowbLS0tap82bjiP5wYEHEBAgG4BlZWVqgGWWWIQAlWA5gFt
        3HDe0NCQ+QK0PcAaT9hwxl95oK2tTe3Txg3nDQ8PC1JUvweQy2PV1dWqAaYYYeOqtRDww4ON6WcI+0ZG
        RswXUFNToxowbB0dHVcCeG0o0FAoDy+zPODk5PQnq2BMTIxER0er8PqyGh4zCzo7O1UB+IC5Bvtevnyp
        XwALUVFR0UPs4q9h6Ksb+AJ9K5oAfjMYYrYAvEAtUjiMjM6da7cLPT09/wiR1jExMaHfAzTOaojvgdsE
        OHAjPnr0SOrr66Wuru4a7GMZx5w3ONT+fSGiAH4PREZGqv8NbsAefS88PDwmUTFvxN3dfRKfZr+urq56
        ax41/r3zvyFF0BO3YIl+k/Cb4jbj7L9TgKmH/4uxvwCoXThmRo7CvwAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.FormFactorShadowProperty" xml:space="preserve">
    <value>Pocket_PC</value>
  </metadata>
</root>